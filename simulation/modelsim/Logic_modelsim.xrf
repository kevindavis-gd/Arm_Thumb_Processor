vendor_name = ModelSim
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/Logic.vhd
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/Reg.vhd
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/Decoder_1.vhd
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/Multiplexor.vhd
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/regEnable.vhd
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/moveImm.vhd
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/Adder.vhd
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/oneBitAdder.vhd
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/bitInverter.vhd
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/EOR.vhd
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/And_reg.vhd
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/Display.vhd
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/Add_number.vhd
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/bitInverter_number.vhd
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/left_shift.vhd
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/right_shift.vhd
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/Processor.vwf
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/Waveform.vwf
source_file = 1, Waveform1.vwf
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/AddOne.vhd
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/test1.vwf
source_file = 1, C:/Users/shylo/Desktop/Logic Design Final Project/db/Logic.cbx.xml
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_p.vhd
design_name = \Logic 
instance = comp, \AddSub|Bit0|sum~2 , AddSub|Bit0|sum~2, \Logic , 1
instance = comp, \AddSub|Bit0|sum~14 , AddSub|Bit0|sum~14, \Logic , 1
instance = comp, \regEN|reg1 , regEN|reg1, \Logic , 1
instance = comp, \Decoder1|instrC[3]~2 , Decoder1|instrC[3]~2, \Logic , 1
instance = comp, \Decoder1|comb~5 , Decoder1|comb~5, \Logic , 1
instance = comp, \Reg_XoR|dest[0]~0 , Reg_XoR|dest[0]~0, \Logic , 1
instance = comp, \Mux|currAns[0]~0 , Mux|currAns[0]~0, \Logic , 1
instance = comp, \toInvertnum|reg0_valout_num[0]~0 , toInvertnum|reg0_valout_num[0]~0, \Logic , 1
instance = comp, \AddSubnum|Bit0|sum~0 , AddSubnum|Bit0|sum~0, \Logic , 1
instance = comp, \Mux|currAns[0]~1 , Mux|currAns[0]~1, \Logic , 1
instance = comp, \Reg_XoR|to_reg[0] , Reg_XoR|to_reg[0], \Logic , 1
instance = comp, \Mux|currAns[0]~2 , Mux|currAns[0]~2, \Logic , 1
instance = comp, \Mux|currAns[0]~3 , Mux|currAns[0]~3, \Logic , 1
instance = comp, \Mux|currAns[0]~4 , Mux|currAns[0]~4, \Logic , 1
instance = comp, \Mux|currAns[0]~5 , Mux|currAns[0]~5, \Logic , 1
instance = comp, \toInvert|reg1_valout[1]~2 , toInvert|reg1_valout[1]~2, \Logic , 1
instance = comp, \AddSubnum|Bit0|cout~0 , AddSubnum|Bit0|cout~0, \Logic , 1
instance = comp, \AddSubnum|Bit1|sum~0 , AddSubnum|Bit1|sum~0, \Logic , 1
instance = comp, \Add1|Bit2|sum~0 , Add1|Bit2|sum~0, \Logic , 1
instance = comp, \toInvert|reg0_valout[2]~4 , toInvert|reg0_valout[2]~4, \Logic , 1
instance = comp, \toInvert|reg0_valout[3]~6 , toInvert|reg0_valout[3]~6, \Logic , 1
instance = comp, \toInvertnum|reg0_valout_num[3]~3 , toInvertnum|reg0_valout_num[3]~3, \Logic , 1
instance = comp, \Add1|Bit4|sum~0 , Add1|Bit4|sum~0, \Logic , 1
instance = comp, \toInvert|reg1_valout[4]~7 , toInvert|reg1_valout[4]~7, \Logic , 1
instance = comp, \toInvert|reg0_valout[5]~9 , toInvert|reg0_valout[5]~9, \Logic , 1
instance = comp, \toInvertnum|reg0_valout_num[5]~5 , toInvertnum|reg0_valout_num[5]~5, \Logic , 1
instance = comp, \Add1|Bit6|sum~0 , Add1|Bit6|sum~0, \Logic , 1
instance = comp, \toInvert|reg0_valout[6]~10 , toInvert|reg0_valout[6]~10, \Logic , 1
instance = comp, \Mux|currAns[6]~33 , Mux|currAns[6]~33, \Logic , 1
instance = comp, \toInvertnum|reg0_valout_num[6]~6 , toInvertnum|reg0_valout_num[6]~6, \Logic , 1
instance = comp, \Mux|currAns[0] , Mux|currAns[0], \Logic , 1
instance = comp, \Decoder1|imm[0] , Decoder1|imm[0], \Logic , 1
instance = comp, \Decoder1|imm[6] , Decoder1|imm[6], \Logic , 1
instance = comp, \Logic_exe~input , Logic_exe~input, \Logic , 1
instance = comp, \Logic_in[4]~input , Logic_in[4]~input, \Logic , 1
instance = comp, \Logic_exe~inputclkctrl , Logic_exe~inputclkctrl, \Logic , 1
instance = comp, \regEN|reg1~clkctrl , regEN|reg1~clkctrl, \Logic , 1
instance = comp, \reg0_valueout[0]~output , reg0_valueout[0]~output, \Logic , 1
instance = comp, \reg0_valueout[1]~output , reg0_valueout[1]~output, \Logic , 1
instance = comp, \reg0_valueout[2]~output , reg0_valueout[2]~output, \Logic , 1
instance = comp, \reg0_valueout[3]~output , reg0_valueout[3]~output, \Logic , 1
instance = comp, \reg0_valueout[4]~output , reg0_valueout[4]~output, \Logic , 1
instance = comp, \reg0_valueout[5]~output , reg0_valueout[5]~output, \Logic , 1
instance = comp, \reg0_valueout[6]~output , reg0_valueout[6]~output, \Logic , 1
instance = comp, \reg0_valueout[7]~output , reg0_valueout[7]~output, \Logic , 1
instance = comp, \reg1_valueout[0]~output , reg1_valueout[0]~output, \Logic , 1
instance = comp, \reg1_valueout[1]~output , reg1_valueout[1]~output, \Logic , 1
instance = comp, \reg1_valueout[2]~output , reg1_valueout[2]~output, \Logic , 1
instance = comp, \reg1_valueout[3]~output , reg1_valueout[3]~output, \Logic , 1
instance = comp, \reg1_valueout[4]~output , reg1_valueout[4]~output, \Logic , 1
instance = comp, \reg1_valueout[5]~output , reg1_valueout[5]~output, \Logic , 1
instance = comp, \reg1_valueout[6]~output , reg1_valueout[6]~output, \Logic , 1
instance = comp, \reg1_valueout[7]~output , reg1_valueout[7]~output, \Logic , 1
instance = comp, \regT_valueout[0]~output , regT_valueout[0]~output, \Logic , 1
instance = comp, \regT_valueout[1]~output , regT_valueout[1]~output, \Logic , 1
instance = comp, \regT_valueout[2]~output , regT_valueout[2]~output, \Logic , 1
instance = comp, \regT_valueout[3]~output , regT_valueout[3]~output, \Logic , 1
instance = comp, \regT_valueout[4]~output , regT_valueout[4]~output, \Logic , 1
instance = comp, \regT_valueout[5]~output , regT_valueout[5]~output, \Logic , 1
instance = comp, \regT_valueout[6]~output , regT_valueout[6]~output, \Logic , 1
instance = comp, \regT_valueout[7]~output , regT_valueout[7]~output, \Logic , 1
instance = comp, \a0~output , a0~output, \Logic , 1
instance = comp, \a1~output , a1~output, \Logic , 1
instance = comp, \a2~output , a2~output, \Logic , 1
instance = comp, \a3~output , a3~output, \Logic , 1
instance = comp, \a4~output , a4~output, \Logic , 1
instance = comp, \a5~output , a5~output, \Logic , 1
instance = comp, \a6~output , a6~output, \Logic , 1
instance = comp, \b0~output , b0~output, \Logic , 1
instance = comp, \b1~output , b1~output, \Logic , 1
instance = comp, \b2~output , b2~output, \Logic , 1
instance = comp, \b3~output , b3~output, \Logic , 1
instance = comp, \b4~output , b4~output, \Logic , 1
instance = comp, \b5~output , b5~output, \Logic , 1
instance = comp, \b6~output , b6~output, \Logic , 1
instance = comp, \Logic_upd~input , Logic_upd~input, \Logic , 1
instance = comp, \Logic_in[0]~input , Logic_in[0]~input, \Logic , 1
instance = comp, \Logic_in[1]~input , Logic_in[1]~input, \Logic , 1
instance = comp, \Logic_in[2]~input , Logic_in[2]~input, \Logic , 1
instance = comp, \Decoder1|Equal1~1 , Decoder1|Equal1~1, \Logic , 1
instance = comp, \Logic_in[14]~input , Logic_in[14]~input, \Logic , 1
instance = comp, \Logic_in[12]~input , Logic_in[12]~input, \Logic , 1
instance = comp, \Logic_in[11]~input , Logic_in[11]~input, \Logic , 1
instance = comp, \Decoder1|Equal0~0 , Decoder1|Equal0~0, \Logic , 1
instance = comp, \Logic_in[9]~input , Logic_in[9]~input, \Logic , 1
instance = comp, \Logic_in[8]~input , Logic_in[8]~input, \Logic , 1
instance = comp, \Logic_in[10]~input , Logic_in[10]~input, \Logic , 1
instance = comp, \Decoder1|Equal1~0 , Decoder1|Equal1~0, \Logic , 1
instance = comp, \Decoder1|Equal1~2 , Decoder1|Equal1~2, \Logic , 1
instance = comp, \regEN|reg0 , regEN|reg0, \Logic , 1
instance = comp, \regEN|reg0~clkctrl , regEN|reg0~clkctrl, \Logic , 1
instance = comp, \reg2T|Reg_out[0]~feeder , reg2T|Reg_out[0]~feeder, \Logic , 1
instance = comp, \reg2T|Reg_out[0] , reg2T|Reg_out[0], \Logic , 1
instance = comp, \reg0|Reg_out[0]~feeder , reg0|Reg_out[0]~feeder, \Logic , 1
instance = comp, \reg0|Reg_out[0] , reg0|Reg_out[0], \Logic , 1
instance = comp, \Logic_in[13]~input , Logic_in[13]~input, \Logic , 1
instance = comp, \Logic_in[15]~input , Logic_in[15]~input, \Logic , 1
instance = comp, \Decoder1|instrC[3]~5 , Decoder1|instrC[3]~5, \Logic , 1
instance = comp, \Decoder1|Equal2~0 , Decoder1|Equal2~0, \Logic , 1
instance = comp, \Decoder1|Equal0~1 , Decoder1|Equal0~1, \Logic , 1
instance = comp, \Decoder1|Equal0~2 , Decoder1|Equal0~2, \Logic , 1
instance = comp, \Decoder1|instrC[1]~6 , Decoder1|instrC[1]~6, \Logic , 1
instance = comp, \Logic_in[7]~input , Logic_in[7]~input, \Logic , 1
instance = comp, \Decoder1|instrC[3]~7 , Decoder1|instrC[3]~7, \Logic , 1
instance = comp, \Decoder1|Equal4~0 , Decoder1|Equal4~0, \Logic , 1
instance = comp, \Decoder1|Equal4~1 , Decoder1|Equal4~1, \Logic , 1
instance = comp, \Decoder1|instrC[3]~8 , Decoder1|instrC[3]~8, \Logic , 1
instance = comp, \Decoder1|Equal7~0 , Decoder1|Equal7~0, \Logic , 1
instance = comp, \Decoder1|instrC[3]~0 , Decoder1|instrC[3]~0, \Logic , 1
instance = comp, \Decoder1|instrC[3]~9 , Decoder1|instrC[3]~9, \Logic , 1
instance = comp, \Decoder1|instrC[3]~10 , Decoder1|instrC[3]~10, \Logic , 1
instance = comp, \Logic_in[6]~input , Logic_in[6]~input, \Logic , 1
instance = comp, \Decoder1|Equal6~0 , Decoder1|Equal6~0, \Logic , 1
instance = comp, \Decoder1|instrC[3]~11 , Decoder1|instrC[3]~11, \Logic , 1
instance = comp, \Decoder1|instrC[3]~12 , Decoder1|instrC[3]~12, \Logic , 1
instance = comp, \Decoder1|instrC[3]~3 , Decoder1|instrC[3]~3, \Logic , 1
instance = comp, \Logic_in[5]~input , Logic_in[5]~input, \Logic , 1
instance = comp, \Logic_in[3]~input , Logic_in[3]~input, \Logic , 1
instance = comp, \Decoder1|Equal13~0 , Decoder1|Equal13~0, \Logic , 1
instance = comp, \Decoder1|instrC[3]~1 , Decoder1|instrC[3]~1, \Logic , 1
instance = comp, \Decoder1|instrC[3]~4 , Decoder1|instrC[3]~4, \Logic , 1
instance = comp, \Decoder1|instrC[3] , Decoder1|instrC[3], \Logic , 1
instance = comp, \Decoder1|instrC[3]~clkctrl , Decoder1|instrC[3]~clkctrl, \Logic , 1
instance = comp, \Decoder1|comb~7 , Decoder1|comb~7, \Logic , 1
instance = comp, \Decoder1|Rs2 , Decoder1|Rs2, \Logic , 1
instance = comp, \Decoder1|Equal3~0 , Decoder1|Equal3~0, \Logic , 1
instance = comp, \Decoder1|Equal2~1 , Decoder1|Equal2~1, \Logic , 1
instance = comp, \Decoder1|instrC[0]~13 , Decoder1|instrC[0]~13, \Logic , 1
instance = comp, \Decoder1|comb~9 , Decoder1|comb~9, \Logic , 1
instance = comp, \Decoder1|comb~8 , Decoder1|comb~8, \Logic , 1
instance = comp, \Decoder1|instrC[0] , Decoder1|instrC[0], \Logic , 1
instance = comp, \Decoder1|instrC[1]~14 , Decoder1|instrC[1]~14, \Logic , 1
instance = comp, \Decoder1|comb~6 , Decoder1|comb~6, \Logic , 1
instance = comp, \Decoder1|instrC[1] , Decoder1|instrC[1], \Logic , 1
instance = comp, \Mux|Equal6~0 , Mux|Equal6~0, \Logic , 1
instance = comp, \Decoder1|comb~4 , Decoder1|comb~4, \Logic , 1
instance = comp, \Decoder1|instrC[2] , Decoder1|instrC[2], \Logic , 1
instance = comp, \Mux|currAns[3]~7 , Mux|currAns[3]~7, \Logic , 1
instance = comp, \reg1|Reg_out[4] , reg1|Reg_out[4], \Logic , 1
instance = comp, \And1|to_reg[4] , And1|to_reg[4], \Logic , 1
instance = comp, \Decoder1|Equal0~2clkctrl , Decoder1|Equal0~2clkctrl, \Logic , 1
instance = comp, \Decoder1|imm[4] , Decoder1|imm[4], \Logic , 1
instance = comp, \Decoder1|Equal9~0 , Decoder1|Equal9~0, \Logic , 1
instance = comp, \Decoder1|Equal4~2 , Decoder1|Equal4~2, \Logic , 1
instance = comp, \Decoder1|isSub~0 , Decoder1|isSub~0, \Logic , 1
instance = comp, \Decoder1|isSub , Decoder1|isSub, \Logic , 1
instance = comp, \Decoder1|isSub~clkctrl , Decoder1|isSub~clkctrl, \Logic , 1
instance = comp, \toInvert|invertedV[4] , toInvert|invertedV[4], \Logic , 1
instance = comp, \toInvert|reg0_valout[4]~7 , toInvert|reg0_valout[4]~7, \Logic , 1
instance = comp, \reg1|Reg_out[3] , reg1|Reg_out[3], \Logic , 1
instance = comp, \toInvert|reg1_valout[3]~5 , toInvert|reg1_valout[3]~5, \Logic , 1
instance = comp, \toInvert|invertedV[2] , toInvert|invertedV[2], \Logic , 1
instance = comp, \toInvert|reg1_valout[2]~4 , toInvert|reg1_valout[2]~4, \Logic , 1
instance = comp, \reg1|Reg_out[1] , reg1|Reg_out[1], \Logic , 1
instance = comp, \toInvert|reg1_valout~1 , toInvert|reg1_valout~1, \Logic , 1
instance = comp, \toInvert|invertedV[1] , toInvert|invertedV[1], \Logic , 1
instance = comp, \toInvert|reg0_valout[1]~3 , toInvert|reg0_valout[1]~3, \Logic , 1
instance = comp, \toInvert|reg0_valout[0]~1 , toInvert|reg0_valout[0]~1, \Logic , 1
instance = comp, \reg1|Reg_out[0] , reg1|Reg_out[0], \Logic , 1
instance = comp, \toInvert|reg0_valout~0 , toInvert|reg0_valout~0, \Logic , 1
instance = comp, \toInvert|invertedV[0] , toInvert|invertedV[0], \Logic , 1
instance = comp, \toInvert|reg1_valout[0]~0 , toInvert|reg1_valout[0]~0, \Logic , 1
instance = comp, \AddSub|Bit0|sum~1 , AddSub|Bit0|sum~1, \Logic , 1
instance = comp, \AddSub|Bit0|sum~4 , AddSub|Bit0|sum~4, \Logic , 1
instance = comp, \AddSub|Bit0|sum~6 , AddSub|Bit0|sum~6, \Logic , 1
instance = comp, \AddSub|Bit0|sum~8 , AddSub|Bit0|sum~8, \Logic , 1
instance = comp, \AddSub|Bit0|sum~10 , AddSub|Bit0|sum~10, \Logic , 1
instance = comp, \Mux|currAns[4]~23 , Mux|currAns[4]~23, \Logic , 1
instance = comp, \toInvertnum|reg0_valout_num[4]~4 , toInvertnum|reg0_valout_num[4]~4, \Logic , 1
instance = comp, \Decoder1|Rs1 , Decoder1|Rs1, \Logic , 1
instance = comp, \reg0|Reg_out[2] , reg0|Reg_out[2], \Logic , 1
instance = comp, \toInvertnum|reg0_valout_num[2]~2 , toInvertnum|reg0_valout_num[2]~2, \Logic , 1
instance = comp, \toInvertnum|reg0_valout_num[1]~1 , toInvertnum|reg0_valout_num[1]~1, \Logic , 1
instance = comp, \AddSubnum|Bit0|cout~1 , AddSubnum|Bit0|cout~1, \Logic , 1
instance = comp, \AddSubnum|Bit1|cout~0 , AddSubnum|Bit1|cout~0, \Logic , 1
instance = comp, \AddSubnum|Bit2|cout~0 , AddSubnum|Bit2|cout~0, \Logic , 1
instance = comp, \AddSubnum|Bit3|sum~1 , AddSubnum|Bit3|sum~1, \Logic , 1
instance = comp, \AddSubnum|Bit3|sum~2 , AddSubnum|Bit3|sum~2, \Logic , 1
instance = comp, \AddSubnum|Bit3|sum~4 , AddSubnum|Bit3|sum~4, \Logic , 1
instance = comp, \Reg_XoR|to_reg[4] , Reg_XoR|to_reg[4], \Logic , 1
instance = comp, \Mux|currAns[4]~24 , Mux|currAns[4]~24, \Logic , 1
instance = comp, \Mux|currAns[4]~25 , Mux|currAns[4]~25, \Logic , 1
instance = comp, \Mux|currAns[4]~26 , Mux|currAns[4]~26, \Logic , 1
instance = comp, \Mux|currAns[4]~27 , Mux|currAns[4]~27, \Logic , 1
instance = comp, \Mux|currAns[4] , Mux|currAns[4], \Logic , 1
instance = comp, \reg2T|Reg_out[4]~feeder , reg2T|Reg_out[4]~feeder, \Logic , 1
instance = comp, \reg2T|Reg_out[4] , reg2T|Reg_out[4], \Logic , 1
instance = comp, \reg0|Reg_out[4] , reg0|Reg_out[4], \Logic , 1
instance = comp, \toInvert|reg0_valout~5 , toInvert|reg0_valout~5, \Logic , 1
instance = comp, \And1|to_reg[3] , And1|to_reg[3], \Logic , 1
instance = comp, \toInvert|invert_out[2] , toInvert|invert_out[2], \Logic , 1
instance = comp, \toInvert|invert_out[1] , toInvert|invert_out[1], \Logic , 1
instance = comp, \toInvert|invertedV[3] , toInvert|invertedV[3], \Logic , 1
instance = comp, \toInvert|invert_out[3] , toInvert|invert_out[3], \Logic , 1
instance = comp, \Add1|Bit3|sum~0 , Add1|Bit3|sum~0, \Logic , 1
instance = comp, \Decoder1|imm[3] , Decoder1|imm[3], \Logic , 1
instance = comp, \Reg_XoR|to_reg[3] , Reg_XoR|to_reg[3], \Logic , 1
instance = comp, \Mux|currAns[3]~18 , Mux|currAns[3]~18, \Logic , 1
instance = comp, \Mux|currAns[3]~19 , Mux|currAns[3]~19, \Logic , 1
instance = comp, \Mux|currAns[3]~20 , Mux|currAns[3]~20, \Logic , 1
instance = comp, \Mux|currAns[3]~21 , Mux|currAns[3]~21, \Logic , 1
instance = comp, \Mux|currAns[3]~22 , Mux|currAns[3]~22, \Logic , 1
instance = comp, \Mux|currAns[3] , Mux|currAns[3], \Logic , 1
instance = comp, \reg2T|Reg_out[3] , reg2T|Reg_out[3], \Logic , 1
instance = comp, \reg0|Reg_out[3] , reg0|Reg_out[3], \Logic , 1
instance = comp, \toInvert|reg1_valout~3 , toInvert|reg1_valout~3, \Logic , 1
instance = comp, \And1|to_reg[2] , And1|to_reg[2], \Logic , 1
instance = comp, \AddSubnum|Bit2|sum~0 , AddSubnum|Bit2|sum~0, \Logic , 1
instance = comp, \Decoder1|imm[2] , Decoder1|imm[2], \Logic , 1
instance = comp, \Reg_XoR|to_reg[2] , Reg_XoR|to_reg[2], \Logic , 1
instance = comp, \Mux|currAns[2]~13 , Mux|currAns[2]~13, \Logic , 1
instance = comp, \Mux|currAns[2]~14 , Mux|currAns[2]~14, \Logic , 1
instance = comp, \Mux|currAns[2]~15 , Mux|currAns[2]~15, \Logic , 1
instance = comp, \Mux|currAns[2]~16 , Mux|currAns[2]~16, \Logic , 1
instance = comp, \Mux|currAns[2]~17 , Mux|currAns[2]~17, \Logic , 1
instance = comp, \Mux|currAns[2] , Mux|currAns[2], \Logic , 1
instance = comp, \reg2T|Reg_out[2] , reg2T|Reg_out[2], \Logic , 1
instance = comp, \reg1|Reg_out[2] , reg1|Reg_out[2], \Logic , 1
instance = comp, \toInvert|reg0_valout~2 , toInvert|reg0_valout~2, \Logic , 1
instance = comp, \Mux|currAns[3]~6 , Mux|currAns[3]~6, \Logic , 1
instance = comp, \And1|to_reg[1] , And1|to_reg[1], \Logic , 1
instance = comp, \toInvert|invert_out[0] , toInvert|invert_out[0], \Logic , 1
instance = comp, \Add1|Bit1|sum~0 , Add1|Bit1|sum~0, \Logic , 1
instance = comp, \Decoder1|imm[1] , Decoder1|imm[1], \Logic , 1
instance = comp, \Reg_XoR|to_reg[1] , Reg_XoR|to_reg[1], \Logic , 1
instance = comp, \Mux|currAns[1]~8 , Mux|currAns[1]~8, \Logic , 1
instance = comp, \Mux|currAns[1]~9 , Mux|currAns[1]~9, \Logic , 1
instance = comp, \Mux|currAns[1]~10 , Mux|currAns[1]~10, \Logic , 1
instance = comp, \Mux|currAns[1]~11 , Mux|currAns[1]~11, \Logic , 1
instance = comp, \Mux|currAns[1]~12 , Mux|currAns[1]~12, \Logic , 1
instance = comp, \Mux|currAns[1] , Mux|currAns[1], \Logic , 1
instance = comp, \reg2T|Reg_out[1] , reg2T|Reg_out[1], \Logic , 1
instance = comp, \reg0|Reg_out[1] , reg0|Reg_out[1], \Logic , 1
instance = comp, \toInvert|invertedV[7] , toInvert|invertedV[7], \Logic , 1
instance = comp, \toInvert|invert_out[7] , toInvert|invert_out[7], \Logic , 1
instance = comp, \reg0|Reg_out[7] , reg0|Reg_out[7], \Logic , 1
instance = comp, \toInvert|reg0_valout[7]~11 , toInvert|reg0_valout[7]~11, \Logic , 1
instance = comp, \toInvert|reg1_valout[7]~11 , toInvert|reg1_valout[7]~11, \Logic , 1
instance = comp, \toInvert|reg1_valout[6]~10 , toInvert|reg1_valout[6]~10, \Logic , 1
instance = comp, \reg1|Reg_out[5]~feeder , reg1|Reg_out[5]~feeder, \Logic , 1
instance = comp, \reg1|Reg_out[5] , reg1|Reg_out[5], \Logic , 1
instance = comp, \toInvert|reg1_valout~6 , toInvert|reg1_valout~6, \Logic , 1
instance = comp, \toInvert|invertedV[5] , toInvert|invertedV[5], \Logic , 1
instance = comp, \toInvert|reg1_valout[5]~8 , toInvert|reg1_valout[5]~8, \Logic , 1
instance = comp, \AddSub|Bit0|sum~12 , AddSub|Bit0|sum~12, \Logic , 1
instance = comp, \AddSub|Bit0|sum~16 , AddSub|Bit0|sum~16, \Logic , 1
instance = comp, \toInvert|invertedV[6] , toInvert|invertedV[6], \Logic , 1
instance = comp, \toInvert|invert_out[6] , toInvert|invert_out[6], \Logic , 1
instance = comp, \toInvert|invert_out[5] , toInvert|invert_out[5], \Logic , 1
instance = comp, \toInvert|invert_out[4] , toInvert|invert_out[4], \Logic , 1
instance = comp, \Add1|Bit6|cout~0 , Add1|Bit6|cout~0, \Logic , 1
instance = comp, \Mux|currAns[7]~40 , Mux|currAns[7]~40, \Logic , 1
instance = comp, \Reg_XoR|to_reg[7] , Reg_XoR|to_reg[7], \Logic , 1
instance = comp, \Mux|currAns[7]~41 , Mux|currAns[7]~41, \Logic , 1
instance = comp, \And1|to_reg[7] , And1|to_reg[7], \Logic , 1
instance = comp, \Decoder1|imm[7] , Decoder1|imm[7], \Logic , 1
instance = comp, \toInvertnum|reg0_valout_num[7]~7 , toInvertnum|reg0_valout_num[7]~7, \Logic , 1
instance = comp, \AddSubnum|Bit3|sum~6 , AddSubnum|Bit3|sum~6, \Logic , 1
instance = comp, \AddSubnum|Bit3|sum~8 , AddSubnum|Bit3|sum~8, \Logic , 1
instance = comp, \AddSubnum|Bit3|sum~10 , AddSubnum|Bit3|sum~10, \Logic , 1
instance = comp, \Mux|currAns[7]~38 , Mux|currAns[7]~38, \Logic , 1
instance = comp, \Mux|currAns[7]~39 , Mux|currAns[7]~39, \Logic , 1
instance = comp, \Mux|currAns[7]~42 , Mux|currAns[7]~42, \Logic , 1
instance = comp, \Mux|currAns[7] , Mux|currAns[7], \Logic , 1
instance = comp, \reg2T|Reg_out[7] , reg2T|Reg_out[7], \Logic , 1
instance = comp, \reg1|Reg_out[7] , reg1|Reg_out[7], \Logic , 1
instance = comp, \toInvert|reg1_valout~9 , toInvert|reg1_valout~9, \Logic , 1
instance = comp, \And1|to_reg[6] , And1|to_reg[6], \Logic , 1
instance = comp, \Reg_XoR|to_reg[6] , Reg_XoR|to_reg[6], \Logic , 1
instance = comp, \Mux|currAns[6]~34 , Mux|currAns[6]~34, \Logic , 1
instance = comp, \Mux|currAns[6]~35 , Mux|currAns[6]~35, \Logic , 1
instance = comp, \Mux|currAns[6]~36 , Mux|currAns[6]~36, \Logic , 1
instance = comp, \Mux|currAns[6]~37 , Mux|currAns[6]~37, \Logic , 1
instance = comp, \Mux|currAns[6] , Mux|currAns[6], \Logic , 1
instance = comp, \reg2T|Reg_out[6] , reg2T|Reg_out[6], \Logic , 1
instance = comp, \reg1|Reg_out[6] , reg1|Reg_out[6], \Logic , 1
instance = comp, \reg0|Reg_out[6] , reg0|Reg_out[6], \Logic , 1
instance = comp, \toInvert|reg0_valout~8 , toInvert|reg0_valout~8, \Logic , 1
instance = comp, \And1|to_reg[5] , And1|to_reg[5], \Logic , 1
instance = comp, \Add1|Bit3|cout~0 , Add1|Bit3|cout~0, \Logic , 1
instance = comp, \Add1|Bit5|sum~0 , Add1|Bit5|sum~0, \Logic , 1
instance = comp, \Decoder1|imm[5] , Decoder1|imm[5], \Logic , 1
instance = comp, \Reg_XoR|to_reg[5] , Reg_XoR|to_reg[5], \Logic , 1
instance = comp, \Mux|currAns[5]~28 , Mux|currAns[5]~28, \Logic , 1
instance = comp, \Mux|currAns[5]~29 , Mux|currAns[5]~29, \Logic , 1
instance = comp, \Mux|currAns[5]~30 , Mux|currAns[5]~30, \Logic , 1
instance = comp, \Mux|currAns[5]~31 , Mux|currAns[5]~31, \Logic , 1
instance = comp, \Mux|currAns[5]~32 , Mux|currAns[5]~32, \Logic , 1
instance = comp, \Mux|currAns[5] , Mux|currAns[5], \Logic , 1
instance = comp, \reg2T|Reg_out[5] , reg2T|Reg_out[5], \Logic , 1
instance = comp, \reg0|Reg_out[5] , reg0|Reg_out[5], \Logic , 1
instance = comp, \Disp|Equal0~0 , Disp|Equal0~0, \Logic , 1
instance = comp, \Disp|left_disp[1]~1 , Disp|left_disp[1]~1, \Logic , 1
instance = comp, \Disp|left_disp[0]~2 , Disp|left_disp[0]~2, \Logic , 1
instance = comp, \Disp|left_disp[3]~0 , Disp|left_disp[3]~0, \Logic , 1
instance = comp, \Disp|left_disp[2]~3 , Disp|left_disp[2]~3, \Logic , 1
instance = comp, \Disp|a0~0 , Disp|a0~0, \Logic , 1
instance = comp, \Disp|a1~0 , Disp|a1~0, \Logic , 1
instance = comp, \Disp|a2~0 , Disp|a2~0, \Logic , 1
instance = comp, \Disp|a3~0 , Disp|a3~0, \Logic , 1
instance = comp, \Disp|a4~0 , Disp|a4~0, \Logic , 1
instance = comp, \Disp|a5~0 , Disp|a5~0, \Logic , 1
instance = comp, \Disp|a6~0 , Disp|a6~0, \Logic , 1
instance = comp, \Disp|right_disp[1]~1 , Disp|right_disp[1]~1, \Logic , 1
instance = comp, \Disp|right_disp[0]~2 , Disp|right_disp[0]~2, \Logic , 1
instance = comp, \Disp|right_disp[2]~3 , Disp|right_disp[2]~3, \Logic , 1
instance = comp, \Disp|right_disp[3]~0 , Disp|right_disp[3]~0, \Logic , 1
instance = comp, \Disp|b0~0 , Disp|b0~0, \Logic , 1
instance = comp, \Disp|b1~0 , Disp|b1~0, \Logic , 1
instance = comp, \Disp|b2~0 , Disp|b2~0, \Logic , 1
instance = comp, \Disp|b3~0 , Disp|b3~0, \Logic , 1
instance = comp, \Disp|b4~0 , Disp|b4~0, \Logic , 1
instance = comp, \Disp|b5~0 , Disp|b5~0, \Logic , 1
instance = comp, \Disp|b6~0 , Disp|b6~0, \Logic , 1
